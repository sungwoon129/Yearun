<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

<sql id="search">
		<where>
			<!-- <![CDATA[]]> -->
		<choose>
		<when test="pager.search =='all'">
		 free_title like CONCAT(CONCAT('%',#{pager.keyword}),'%') or free_context like CONCAT(CONCAT('%',#{pager.keyword}),'%')	
		</when>
		
		<when test="pager.keyword !='' and pager.keyword != null and pager.search != 'all'"> <!--  키워드앞에 #안붙음 -->
		${pager.search} LIKE CONCAT(CONCAT('%',#{pager.keyword}),'%') <!-- xml파일에서는 %인식불가 CDATA를 통해서 문자로 만들어줌 그걸 concat으로 이어붙임 --> 
		</when> <!-- #는 값으로 가져다 붙이는거 , $는 문자열로 가져다 붙이는거,$를 쓰면 해킹당할수도있음 -->
		<otherwise>
		
		</otherwise>
		</choose>
		</where>
	</sql>

	<select id="total" resultType="Integer">
	SELECT COUNT(*) FROM free_board
	<include refid="search"></include>
	</select>
	
	<select id="todayTotal" resultType="Integer">
	SELECT count(*) FROM free_board 
	WHERE 	<choose>
		<when test="pager.search =='all'">
		 free_title like CONCAT(CONCAT('%',#{pager.keyword}),'%') or free_context like CONCAT(CONCAT('%',#{pager.keyword}),'%')	AND
		</when>
		
		<when test="pager.keyword !='' and pager.keyword != null and pager.search != 'all'"> <!--  키워드앞에 #안붙음 -->
		${pager.search} LIKE CONCAT(CONCAT('%',#{pager.keyword}),'%') AND <!-- xml파일에서는 %인식불가 CDATA를 통해서 문자로 만들어줌 그걸 concat으로 이어붙임 --> 
		</when> <!-- #는 값으로 가져다 붙이는거 , $는 문자열로 가져다 붙이는거,$를 쓰면 해킹당할수도있음 -->
		<otherwise>
		
		</otherwise>
		</choose>reg_date > CURRENT_DATE( );
	</select>


	<update id="incRef">
		UPDATE free_board SET ref=ref+1 where free_code=#{freeCode}
	</update>
	
	<update id="incRecommend">
			<!-- UPDATE free_board SET recommend=recommend+1 WHERE free_code=#{freeCode} -->
			UPDATE free_board SET recommend=recommend+1 WHERE free_code=#{freeCode}
	 </update>

	<insert id="checkRecommend">
		INSERT INTO frecommend VALUES(#{freeCode},#{id})
	</insert>
	
	<select id="list" resultType="Post">
		SELECT free_code,free_title,free_context,free_photoa,id,ref,recommend,reg_date,origin_no,group_ord,group_layer,(select count(*) from free_comment where free_code=free_board.free_code) AS total_comment,thumbnail 
		FROM  free_board
		
		<include refid="search"></include>
		ORDER BY origin_no DESC, group_ord ASC
		
		LIMIT #{pager.start},#{pager.perPageOption}
	</select>
	<select id="item" resultType="Post">
		SELECT *,(select count(*) from free_comment where free_code=free_board.free_code) AS total_comment  FROM free_board WHERE free_code=#{freeCode}<!-- origin_no=#{originNo} and group_layer > #{groupLayer} -->
	</select>
	<delete id="delete">
		DELETE FROM free_board WHERE free_code=#{freeCode}
	</delete>
	<insert id="add"> 
		
		INSERT INTO free_board (id,free_title,free_context,reg_date,free_photoa,origin_no,group_ord,group_layer,thumbnail )
		VALUES (#{id},#{freeTitle},#{freeContext},NOW(),#{freePhotoA}, (SELECT MAX(free_code)+1 FROM free_board fb),1,0,#{thumbnail})
		
	<selectKey keyColumn="free_code" keyProperty="freeCode" resultType="Integer" order="AFTER"><!-- 처음껀 db 컬럼명 두번째껀 모델에 있는 필드명 -->
			<!-- 오토인크리먼트인 code값을 가져오기 위해 마이바티스에서 제공하는 selectKey라는 태그를 사용한다.
				insert 구문이 트랙잭션에 걸려서 커밋되기 전에 값을 가져온 후 커밋을 한다. -->
		SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE free_board
		SET free_title=#{freeTitle}, free_context=#{freeContext}, free_photoa=#{freePhotoA}, thumbnail=#{thumbnail}
		WHERE free_code=#{freeCode}
	</update>
	
 	<insert id="replyadd">
		INSERT INTO free_board (id,free_title,free_context,reg_date,free_photoa,origin_no,group_ord,group_layer)
		VALUES (#{id},#{freeTitle},#{freeContext},NOW(),#{freePhotoA},#{originNo},#{groupOrd}+1,#{groupLayer}+1)
	
	
	</insert> 
	
	<update id="replyupdate">
	UPDATE free_board SET group_ord = group_ord + 1 where origin_no = #{originNo} and group_ord > #{groupOrd}
	</update>
	
	<delete id="deleteComment">
	DELETE FROM free_comment WHERE free_code=#{freeCode}
	</delete>
	
	<select id="countRecommend" resultType="Integer">
	SELECT COUNT(*) FROM frecommend WHERE id=#{id} and free_code=#{freeCode}
	</select>
	
	<select id="nlist" resultType="Notice">
	SELECT * FROM notice ORDER BY notice_code DESC LIMIT 0,5
	</select>
	
	<select id="flist" resultType="Post">
	SELECT * FROM free_board ORDER BY free_code DESC LIMIT 0,5
	</select>
	
	<select id="countComment" resultType="Integer">
	select count(*) AS total_comment from free_comment LEFT JOIN free_board ON free_comment.free_code=free_board.free_code WHERE free_comment.free_code=#{freeCode}
	</select>
	
	<select id="mylist" resultType="MyArticle">
	(select review_code as code,review_title as title,id,reg_date,recommend,ref, '후기게시판' AS board,'review' as boardname FROM review_board where id=#{id}) 
	UNION 
	(select free_code as code, free_title as title,id,reg_date,recommend,ref,'자유게시판' AS 'board','free' AS 'boardname' from free_board where id=#{id})
	</select>
</mapper>